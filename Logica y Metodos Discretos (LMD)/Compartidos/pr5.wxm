/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 0.8.4 ] */

/* [wxMaxima: comment start ]
Práctica 5:Combinatoria
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Comando binomial(n,r)para calcular el coefciente binomial (n,r):
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
binomial(7,2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
binomial(7,0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
binomial(7,10);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
¿Cuál es el significado de los resultados obtenidos?
C (n, r) representa el número de subconjuntos de r elementos que tiene un conjunto con n elementos. 
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A continuación comprobamos la propiedad de simetría de los coeficientes binomiales en un caso particular.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
makelist(binomial(10,k),k,0,10);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
También podemos dejar alguno de los valores n ó r sin determinar.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
binomial(n,3);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Ejercicio:
Calcule un entero positivo n sabiendo que el conjunto {1, 2, . . . , n} tiene exactamente 2258956742190
subconjuntos de cardinal 4.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
solve(binomial(n,4)=2258956742190);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Cogemos la n que sea un número entero positivo.
Comprobamos que la solucíón es correcta:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
binomial(2715,4);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Comprobamos la identidad :
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
sum(binomial(n,k),k,0,n);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
simplificamos el resultado:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
sum(binomial(n,k),k,0,n), simpsum;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Dado un conjunto finito X, es una propiedad conocida que el número de subconjuntos de X de cardinal
par es igual al número de subconjuntos de X de cardinal impar. Verifiquemos esta propiedad.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
sum(binomial(n,2*k),k,0,n), simpsum;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
sum(binomial(n,2*k+1),k,0,n), simpsum;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Podemos generar las r-combinaciones de un conjunto X deniendo la función siguiente.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
combi(X,r):=subset(powerset(X),lambda([A],is(cardinality(A)=r)));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
combi({a,b,c,d,e},1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
combi({a,b,c,d,e},2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
is(cardinality(%)=binomial(5,2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
combi({a,b,c,d,e},0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Permutaciones.Comando permutations(X)que nos permite obtener el conjunto de
las permutaciones de un conjunto X.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
permutations({a,b});
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
permutations({a,b,c});
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
permutations({a,b,c,d});
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
(Ordenadas lexicográficamente).
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Calcular las permutaciones de los elementos de una lista.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
permutations([a,b,c,d]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
El resultado es idéntico al del comando permutations({a, b, c, d}).
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Podemos generar permutaciones con repetición.
Obtenemos todas las formas de permutar las letras de la palabra RELEER.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
permutations([R,E,L,E,E,R]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
 Sabemos que el número de permutaciones de dicha palabra viene dado por el coeficiente multinomial(n=6,r=3,2,1)=6!/3!2!1!=60.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
cardinality(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Obtenemos el mismo resultado usando este comando.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
multinomial_coeff(3, 2, 1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Ejercicio:
Calcule el coeficiente del término x^76*y^5*z^42 en el polinomio (x + 2y - 3z)^123.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
multinomial_coeff();
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
