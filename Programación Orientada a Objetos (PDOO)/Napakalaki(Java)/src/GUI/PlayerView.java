/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import java.awt.Component;
import java.util.*;
import javax.swing.JPanel;
import napakalaki.Napakalaki;
import napakalaki.Player;
import napakalaki.Treasure;

/**
 *
 * @author Josele
 */
public class PlayerView extends javax.swing.JPanel {

    private Player instancePlayer; /*= new Player();*/
    private Napakalaki napakalakiModel;        
    /**
     * Creates new form PlayerView
     */
    public PlayerView() {
        initComponents();
    }
    
    public void setPlayer(Player p){
       instancePlayer = p;

       jlbNamePlayer.setText(instancePlayer.getName());
       jlbLevelPlayer.setText(String.valueOf(instancePlayer.getLevels()));
       jlbLvlCombat.setText(String.valueOf(instancePlayer.getCombatLevel()));
       jlbCanI.setText(Boolean.toString(instancePlayer.canISteal()));
       jlbCultist.setText(instancePlayer.getClass().getSimpleName());
       
       jlbEnemy.setText(instancePlayer.getEnemy().getName());
       fillTreasurePanel(jpVisibleTreasures, instancePlayer.getVisibleTreasures());
       fillTreasurePanel(jpHiddenTreasures, instancePlayer.getHiddenTreasures());

       pendingBadConsequenceView1.setPending(instancePlayer.getPendingBad());
       
       
       repaint();
       revalidate();
   }

    public void setNapakalaki(Napakalaki nap){    //se le asigna el napakalaki actual
        napakalakiModel = nap;                         //necesario para los botones de discard               
    }
    
    
    private void fillTreasurePanel (JPanel aPanel, ArrayList<Treasure> aList) {
    // Se elimina la informaci칩n antigua
    aPanel.removeAll();
    // Se recorre la lista de tesoros construyendo y a침adiendo sus vistas
    // al panel
    for (Treasure t : aList) {
        TreasureView aTreasureView = new TreasureView();
        aTreasureView.setTreasure (t);
        aTreasureView.setVisible (true);
        aPanel.add (aTreasureView);
    }
    // Se fuerza la actualizaci칩n visual del panel
    aPanel.repaint();
    aPanel.revalidate();
    }
    
    
    private ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
    // Se recorren los tesoros que contiene el panel,
    //    almacenando en un vector aquellos que est치n seleccionados.
    //    Finalmente se devuelve dicho vector.
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;
            if ( tv.isSelected() ){
                output.add ( tv.getTreasure() );
            }
        }
        return output;
    }
    
    private ArrayList<Treasure> getTreasureSpecific(JPanel aPanel){
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;
                output.add ( tv.getTreasure() );
        }
        return output;
    }


   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jlbNamePlayer = new javax.swing.JLabel();
        jlbLevelPlayer = new javax.swing.JLabel();
        jlbEnemy = new javax.swing.JLabel();
        jlbCultist = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jlbEtiqVisible = new javax.swing.JLabel();
        jlbOcultos = new javax.swing.JLabel();
        jlbEtiqNombre = new javax.swing.JLabel();
        jlbEtiqNivel = new javax.swing.JLabel();
        jlbEtiqEnemigo = new javax.swing.JLabel();
        jlbEtiqSectario = new javax.swing.JLabel();
        jbStealTreasure = new javax.swing.JButton();
        jbMakeVisible = new javax.swing.JButton();
        jbDiscardHiddenTreasure = new javax.swing.JButton();
        jbDiscardAllTreasures = new javax.swing.JButton();
        pendingBadConsequenceView1 = new GUI.PendingBadConsequenceView();
        jlbEtiqJugador = new javax.swing.JLabel();
        jblEticLvlCombat = new javax.swing.JLabel();
        jlbLvlCombat = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jpVisibleTreasures = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jpHiddenTreasures = new javax.swing.JPanel();
        jbDiscardVisibleTreasure1 = new javax.swing.JButton();
        jlbEticCanI = new javax.swing.JLabel();
        jlbCanI = new javax.swing.JLabel();

        jlbNamePlayer.setText("asdf");

        jlbLevelPlayer.setText("12");

        jlbEnemy.setText("enemigo");

        jlbCultist.setText("es cultist");

        jlbEtiqVisible.setText("Tesoros Visibles:");

        jlbOcultos.setText("Tesoros Ocultos:");

        jlbEtiqNombre.setText("Nombre:");

        jlbEtiqNivel.setText("Nivel:");

        jlbEtiqEnemigo.setText("Enemigo:");

        jlbEtiqSectario.setText("Jugador sectario: ");

        jbStealTreasure.setText("Robar Tesoro");
        jbStealTreasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbStealTreasureActionPerformed(evt);
            }
        });

        jbMakeVisible.setText("Hacer Visible");
        jbMakeVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMakeVisibleActionPerformed(evt);
            }
        });

        jbDiscardHiddenTreasure.setText("Descartar tesoro Oculto");
        jbDiscardHiddenTreasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDiscardHiddenTreasureActionPerformed(evt);
            }
        });

        jbDiscardAllTreasures.setText("Descartar todos los tesoros");
        jbDiscardAllTreasures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDiscardAllTreasuresActionPerformed(evt);
            }
        });

        jlbEtiqJugador.setText("JUGADOR:");

        jblEticLvlCombat.setText("LvlCombat");

        jlbLvlCombat.setText("jLabel2");

        jpVisibleTreasures.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpVisibleTreasures.setLayout(new javax.swing.BoxLayout(jpVisibleTreasures, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane1.setViewportView(jpVisibleTreasures);

        jpHiddenTreasures.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpHiddenTreasures.setLayout(new javax.swing.BoxLayout(jpHiddenTreasures, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane2.setViewportView(jpHiddenTreasures);

        jbDiscardVisibleTreasure1.setText("Descartar tesoro Visible");
        jbDiscardVisibleTreasure1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDiscardVisibleTreasure1ActionPerformed(evt);
            }
        });

        jlbEticCanI.setText("Puede Robar:");

        jlbCanI.setText("no");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlbEtiqNombre)
                                            .addComponent(jlbEtiqNivel)
                                            .addComponent(jblEticLvlCombat))
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlbLevelPlayer)
                                            .addComponent(jlbNamePlayer)
                                            .addComponent(jlbLvlCombat))
                                        .addGap(59, 59, 59)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlbEtiqSectario)
                                            .addComponent(jlbEtiqEnemigo)
                                            .addComponent(jlbEticCanI)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(84, 84, 84)
                                        .addComponent(jlbEtiqVisible)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jlbCultist)
                                                .addGap(140, 140, 140)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jbDiscardHiddenTreasure)
                                                    .addComponent(jbDiscardVisibleTreasure1)
                                                    .addComponent(jbDiscardAllTreasures)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jbMakeVisible)
                                                        .addComponent(jbStealTreasure))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jlbEnemy)
                                                    .addComponent(jlbCanI))
                                                .addGap(362, 362, 362))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlbOcultos)
                                        .addGap(197, 197, 197))))
                            .addComponent(jlbEtiqJugador)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(pendingBadConsequenceView1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jlbEtiqJugador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jlbEnemy)
                                .addComponent(jlbEtiqEnemigo))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jlbEtiqNombre)
                                .addComponent(jlbNamePlayer)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbEtiqNivel)
                            .addComponent(jlbLevelPlayer)
                            .addComponent(jlbEticCanI, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbCanI))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jblEticLvlCombat)
                            .addComponent(jlbLvlCombat)
                            .addComponent(jlbEtiqSectario)
                            .addComponent(jlbCultist))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jbDiscardAllTreasures)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbDiscardHiddenTreasure)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbDiscardVisibleTreasure1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbStealTreasure)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbMakeVisible)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbOcultos, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jlbEtiqVisible))))
                    .addComponent(pendingBadConsequenceView1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbStealTreasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbStealTreasureActionPerformed
        instancePlayer.stealTreasure();
        setPlayer(napakalakiModel.getCurrentPlayer());
        
        
    }//GEN-LAST:event_jbStealTreasureActionPerformed

    private void jbDiscardHiddenTreasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDiscardHiddenTreasureActionPerformed
       ArrayList<Treasure> thidden = getSelectedTreasures(jpHiddenTreasures);
       if(thidden.size()==1){
       napakalakiModel.getCurrentPlayer().discardHiddenTreasure(thidden.get(0));
       }
       setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_jbDiscardHiddenTreasureActionPerformed

    private void jbMakeVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMakeVisibleActionPerformed
       ArrayList<Treasure> selHidden = getSelectedTreasures(jpHiddenTreasures);
       napakalakiModel.makeTreasuresVisible(selHidden);
       setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_jbMakeVisibleActionPerformed

    private void jbDiscardAllTreasuresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDiscardAllTreasuresActionPerformed
        ArrayList<Treasure> allVisible = getTreasureSpecific(jpVisibleTreasures);
        ArrayList<Treasure> allHidden = getTreasureSpecific(jpHiddenTreasures);
        
        napakalakiModel.discardVisibleTreasures(allVisible);
        napakalakiModel.discardHiddenTreasures(allHidden);
        
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_jbDiscardAllTreasuresActionPerformed

    private void jbDiscardVisibleTreasure1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDiscardVisibleTreasure1ActionPerformed
       ArrayList<Treasure> tvisible = getSelectedTreasures(jpVisibleTreasures);
       if(tvisible.size()==1){
       napakalakiModel.getCurrentPlayer().discardVisibleTreasure(tvisible.get(0));
       }
       setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_jbDiscardVisibleTreasure1ActionPerformed
    //metodo para usarlo en napakalaki
    public javax.swing.JButton getJbMakeVisible(){
        return jbMakeVisible;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbDiscardAllTreasures;
    private javax.swing.JButton jbDiscardHiddenTreasure;
    private javax.swing.JButton jbDiscardVisibleTreasure1;
    private javax.swing.JButton jbMakeVisible;
    private javax.swing.JButton jbStealTreasure;
    private javax.swing.JLabel jblEticLvlCombat;
    private javax.swing.JLabel jlbCanI;
    private javax.swing.JLabel jlbCultist;
    private javax.swing.JLabel jlbEnemy;
    private javax.swing.JLabel jlbEticCanI;
    private javax.swing.JLabel jlbEtiqEnemigo;
    private javax.swing.JLabel jlbEtiqJugador;
    private javax.swing.JLabel jlbEtiqNivel;
    private javax.swing.JLabel jlbEtiqNombre;
    private javax.swing.JLabel jlbEtiqSectario;
    private javax.swing.JLabel jlbEtiqVisible;
    private javax.swing.JLabel jlbLevelPlayer;
    private javax.swing.JLabel jlbLvlCombat;
    private javax.swing.JLabel jlbNamePlayer;
    private javax.swing.JLabel jlbOcultos;
    private javax.swing.JPanel jpHiddenTreasures;
    private javax.swing.JPanel jpVisibleTreasures;
    private GUI.PendingBadConsequenceView pendingBadConsequenceView1;
    // End of variables declaration//GEN-END:variables
}
