NOTA SOBRE ERROR:

Bueno llegados a este punto, solo nos falta probar el operador "+" que va a ser el encargado de hacer la union
de dos o mas cronologias.

Para hacer dicha union tenemos que tener en cuenta varias cosas:
	- no se pueden repetir elementos
	- se han de mantener ordenados
	- Y las mas engorrosa: Si una fecha se repite entre distintas cronologias(algo muy probable y que ocurre), debemos unir sus acontecimientos en SOLO UNA FECHA.
	Por ejemplo si queremos unir en una sola cronologia dos tipos de cronologias por ejemplo los ficheros de descubrimientos cientificos y otro de  peliculas
	Las fechas se repiten muchas veces, pero sus acontecimientos son totalmente distintos, por lo que podriamos hacer una
	nueva cronologia con todos los datos mezclados.
	
	
Para crear una cronologia usamos el metodo llamado "insertar" de la clase cronologia , este podemos decir que se divide en dos partes
con un if-else. Entrará dentro del if si "comp_invariante()" da true y "!std::binary_search (fechas.begin(),fechas.end(),fh)" da false que quiere decir que no se ha encontrado
el objeto fh dentro del vector fechas.

(OJO: La funcion que le pasabamos al binary_search llamada "functor" la hemos quitado porque realmente no hace falta 
ya que binary_search solo usa el op sobrecargado "<". Para nuestro problema no necesitamos hacer mas comparaciones.)

Volviendo por donde ibamos si entra en el if fh no esta en fechas.
Si entra en else quiere decir que el objeto fh que queremos insertar ya esta en cronologia.
Entonces lo que tenemos que hacer es comprobar sus acontecimientos, por si alguno de ellos no lo tiene la fecha
¿Como lo hacemos? Facil ... hacemos una busqueda con find() en el vector de fechas y buscamos el mismo año 
que el del objeto pasado. El metodo find nos devuelve un iterador (o especie de puntero) donde apunta al objeto que coincide con lo que buscamos.
Para acceder a ese objeto ponemos asterisco (Ver linea 173 de cronologia.cpp)

Una vez encontrado el "objeto conflictivo" con la misma fecha debemos comprobar sus acontecimientos .

Para esto nos vamos ayudar con el metodo aniadirAcontecimiento(s) de la clase fechachistorica que recibe un vector de strings que son los acontecimientos (tambien esta el metodo aniadirAcontecimiento en singular que recibe solo una cadena)
Su funcionamiento consiste en recorrer el vector de strings pasado como arg. e ir viendo en sus acontecimientos si no se repite.
La funcion find devuelve end() si no encuentra lo que buscamos entonces si no lo encuentra es que no existe, por lo que insertamos la cadena.


Hasta aqui todo parece correcto .............
Pero ocurre un problema y es que cuando encuentra un año repetido no funciona como debe .
Hace algo raro repite el nombre del evento e inserta el nuevo.

He dejado un archivo que se llama "salida", fijate en la lineas 2 y 3 y ahi esta el error.
Estuve probando y se inserta en el mismo objeto fecha. Pero por alguna razon repite acontecimientos.

Para volcar la salida de la terminar hacia un fichero:
./bin/pruebacronologia datos/timeline_movies.txt > nombre_de_mi_fichero


Mira tambien en el fichero de timeline_movies en el año 1900 en la linea 1-2 como he duplicado 
para probar el caso de una misma fecha con eventos iguales o distintos.




--------------------------------
Algunas modificaciones menores que he realizado:
- He modificado los toString() ahora se muestran sin el monton comas 
- Junto con los ToString tambien se han quitado las comas como separadores entre eventos y se ha optado mantener la # para que queda mas clarito a la hora revisar el texto.


PD: Perdona el tochazo , he intentado que quede lo mas entendible posible. Ante cualquier duda avisame !



